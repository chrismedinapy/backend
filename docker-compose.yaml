version: '3'

services:
  redis:
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - data-api

  db:
    image: postgis/postgis:13-3.2-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    environment:
      - POSTGRES_DB=${POSTGRES_DB:?err}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD}
    ports:
     - ${POSTGRES_PORT}:${POSTGRES_PORT} 
    networks:
      - data-api
  mongodb:
    image: mongo
    volumes:
      - mongodb_data:/data/db
      - mongo-init-db:/docker-entrypoint-initdb.d 
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    networks:
      - data-api

  web:
    build: .
    command: >
      sh -c "yes | python /app/manage.py makemigrations &&
             yes | python /app/manage.py migrate &&
             python /app/manage.py runserver 0.0.0.0:8000"
    container_name: data
    volumes:
      - .:/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_DAYS=${ACCESS_TOKEN_EXPIRE_DAYS}
      - ENCODING=${ENCODING}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}
    depends_on:
      - db 
      - redis
      - mongodb
      - rabbitmq
    networks:
      - data-api
  adminer:
    image: adminer
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
    networks:
      - data-api

  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
    ports:
      - ${RABBITMQ_PORTS_1}:${RABBITMQ_PORTS_1}
      - ${RABBITMQ_PORTS_2}:${RABBITMQ_PORTS_2}
    networks:
      - data-api

  celery:
      build: .
      command: celery -A core worker -l info -P threads --autoscale=10,3 -E --uid nobody
      volumes:
          - .:/app
      environment:
          - DEBUG=${CELERY_DEBUG}
          - CELERY_BROKER_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@${RABBITMQ_DEFAULT_HOST}:${RABBITMQ_PORTS_1}
      depends_on:
          - web
          - rabbitmq
      networks:
        - data-api
  swagger-ui:
   image: swaggerapi/swagger-ui
   container_name: swagger_ui_container
   ports:
      - "8181:8080"
   volumes:
      - ./OpenApi3.0.2.yml:/OpenApi3.0.2.yml
   environment:
      SWAGGER_JSON: /OpenApi3.0.2.yml
volumes:
  postgres_data:
  mongodb_data:
  mongo-init-db:

networks:
  data-api:
