version: '3'

services:
  redis:
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - data-api
  db:
    image: postgres:14.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data 
    environment:
      - POSTGRES_DB=${POSTGRES_DB:?err}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT} 
    networks:
      - data-api
  mongodb:
    image: mongo
    #container_name: ${MONGO_HOST}
    volumes:
      - mongodb_data:/data/db
      - mongo-init-db:/docker-entrypoint-initdb.d 
    #volumes:
    #  - ./mongo-init-db:/docker-entrypoint-initdb.d
    #  - ./mongo-data:/data/db
    environment:
#      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
#      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    ports:
      - 27017:27017
      #- ${MONGO_PORT}:${MONGO_PORT}
    networks:
      - data-api
  web:
    build: .
    command: >
      sh -c "python /app/manage.py makemigrations &&
             python /app/manage.py migrate &&
             python /app/manage.py runserver 0.0.0.0:8000 &&
             python /app/manage.py test"
    container_name: data
    volumes:
      - .:/app
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_DAYS=${ACCESS_TOKEN_EXPIRE_DAYS}
      - ENCODING=${ENCODING}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    ports:
      - ${DJANGO_PORT}:${DJANGO_PORT}
    depends_on:
      - db 
      - redis
      - mongodb
    networks:
      - data-api
  adminer:
    image: adminer
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
    networks:
      - data-api

volumes:
  postgres_data:
  mongodb_data:
  mongo-init-db:

networks:
  data-api: